name: Scribe Signed Git Commit SBOM

on:
  # schedule:
  #    - cron:  '0 * * * *'
  workflow_dispatch:
env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  AUTHOR_NAME: Jane Doe
  AUTHOR_EMAIL: info@scribesecurity.com
  AUTHOR_PHONE: 111-1111-11
  SUPPLIER_NAME: Scribe-Security
  SUPPLIER_URL: www.scribesecurity.com
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  PRODUCT_VERSION: "9"
  PRODUCT_NAME: Scribe-Synthetic-Testing
  COMPANY_CA: ${{ secrets.COMPANY_CA }}
  SIGNER_CERT: ${{ secrets.SIGNER_CERT }}
  SIGNER_KEY: ${{ secrets.SIGNER_KEY }}
  API: ${{ secrets.api }}


jobs:                      
  generate-source-sbom:
    runs-on: ubuntu-latest
    # needs: increment-version
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3

    - name: Generate signed SBOM for repo content
      uses: scribe-security/action-bom@master
      with:
        target: 'git:.'
        scribe-enable: true
        components: commits,packages,files,dep
        product-key: "scribe-demo-prod-v1773"
        product-version: ${{ env.PRODUCT_VERSION }}
        scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
        label: is_git_commit
        format: attest
        author-name: $AUTHOR_NAME
        author-email: $AUTHOR_EMAIL
        author-phone: $AUTHOR_PHONE
        supplier-name: $SUPPLIER_NAME
        supplier-url: $SUPPLIER_URL
        supplier-email: $SUPPLIER_EMAIL 
        supplier-phone: $SUPPLIER_PHONE
        force: true

  # trigger-signed-sbom-workflow:
  #   runs-on: ubuntu-latest
  #   needs: [generate-source-sbom]
  #   outputs:
  #     trigger_secondary: ${{ steps.determine_trigger.outputs.trigger_secondary }}

  #   steps:
  #     - name: Determine Trigger
  #       id: determine_trigger
  #       run: |
  #         if [ "${{ github.event_name }}" == "schedule" ]; then
  #           echo "::set-output name=trigger_secondary::true"
  #         else
  #           echo "::set-output name=trigger_secondary::false"
  #         fi

  #     - name: Run main tasks
  #       run: echo "Running main tasks..."

  #     - name: Trigger Secondary Workflow
  #       if: ${{ steps.determine_trigger.outputs.trigger_secondary == 'true' }}
  #       uses: actions/github-script@v6
  #       with:
  #         script: |
  #           const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
  #           await github.rest.actions.createWorkflowDispatch({
  #             owner,
  #             repo,
  #             workflow_id: 'signed-git-clone.yaml',
  #             ref: context.ref,
  #           });