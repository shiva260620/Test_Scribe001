name: SLSA Compliance Workflow

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  AUTHOR_NAME: Jane Doe
  AUTHOR_EMAIL: info@scribesecurity.com
  AUTHOR_PHONE: 111-1111-11
  SUPPLIER_NAME: Scribe-Security
  SUPPLIER_URL: www.scribesecurity.com
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  PRODUCT_NAME: Scribe-Synthetic-Testing
  PRODUCT_VERSION: "6"
  COMPANY_CA: ${{ secrets.COMPANY_CA }}
  SIGNER_CERT: ${{ secrets.SIGNER_CERT }}
  SIGNER_KEY: ${{ secrets.SIGNER_KEY }}

jobs:
  # Step 1-a: Generate Signed SBOM for Docker Image
  image-attest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}

      - name: Generate signed SBOM for Docker image
        uses: scribe-security/action-bom@master
        with:
          target: ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}
          scribe-enable: true
          components: commits,packages,files,dep
          product-key: "Rahul"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest
          force: true
          author-name: $AUTHOR_NAME
          author-email: $AUTHOR_EMAIL
          author-phone: $AUTHOR_PHONE
          supplier-name: $SUPPLIER_NAME
          supplier-url: $SUPPLIER_URL
          supplier-email: $SUPPLIER_EMAIL
          supplier-phone: $SUPPLIER_PHONE

  # Step 1-b: Generate SLSA Provenance Record
  generate-provenance:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}

      - name: Generate SLSA provenance
        uses: scribe-security/action-bom@master
        with:
          target: ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}
          scribe-enable: true
          product-key: "Rahul"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest-slsa
          force: true
          author-name: $AUTHOR_NAME
          author-email: $AUTHOR_EMAIL
          author-phone: $AUTHOR_PHONE
          supplier-name: $SUPPLIER_NAME
          supplier-url: $SUPPLIER_URL
          supplier-email: $SUPPLIER_EMAIL
          supplier-phone: $SUPPLIER_PHONE

  # Step 2a: Verify SLSA Level 1 Policy
  verify-slsa-l1:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Verify SLSA Level 1
        uses: scribe-security/action-verify@master
        with:
          target: ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}
          scribe-enable: true
          product-key: "Rahul"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest
          config: .valint.yaml
          rule: slsa/l1-provenance-exists@v1
          verbose: 2

  # Step 2b: Verify SLSA Level 2 Policy
  verify-slsa-l2:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Verify SLSA Level 2
        uses: scribe-security/action-verify@master
        with:
          target: ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }}
          scribe-enable: true
          product-key: "Rahul"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest
          config: .valint.yaml
          rule: slsa/l2-provenance-authenticated@v1
          verbose: 2
