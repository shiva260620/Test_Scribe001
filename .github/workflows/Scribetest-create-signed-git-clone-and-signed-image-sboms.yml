name: SLSA Compliance Workflow

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  AUTHOR_NAME: Jane Doe
  AUTHOR_EMAIL: info@scribesecurity.com
  AUTHOR_PHONE: 111-1111-11
  SUPPLIER_NAME: Scribe-Security
  SUPPLIER_URL: www.scribesecurity.com
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  PRODUCT_NAME: Scribe-Synthetic-Testing
  PRODUCT_VERSION: "6"
  COMPANY_CA: ${{ secrets.COMPANY_CA }}
  SIGNER_CERT: ${{ secrets.SIGNER_CERT }}
  SIGNER_KEY: ${{ secrets.SIGNER_KEY }}

jobs:
  # Step 1: Build the Docker Image and Generate SBOM
  image-build-and-attest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        id: docker_build
        run: docker build . -t ${{ env.IMAGE_NAME }}

      - name: Generate signed SBOM for Docker image
        uses: scribe-security/action-bom@master
        with:
          target: 'docker:${{ env.IMAGE_NAME }}'
          scribe-enable: true
          components: commits,packages,files,dep
          product-key: "Shivam1"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest-slsa
          force: true
          config: .valint.yaml
          author-name: ${{ env.AUTHOR_NAME }}
          author-email: ${{ env.AUTHOR_EMAIL }}
          author-phone: ${{ env.AUTHOR_PHONE }}
          supplier-name: ${{ env.SUPPLIER_NAME }}
          supplier-url: ${{ env.SUPPLIER_URL }}
          supplier-email: ${{ env.SUPPLIER_EMAIL }}
          supplier-phone: ${{ env.SUPPLIER_PHONE }}

  # Step 2: Generate SLSA Provenance Record
  generate-provenance:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build the Docker image again (if necessary)
        run: docker build . -t ${{ env.IMAGE_NAME }}

      - name: Generate SLSA provenance record
        id: slsa_provenance
        uses: scribe-security/action-slsa@master
        with:
          target: 'docker:${{ env.IMAGE_NAME }}'
          scribe-enable: true
          product-key: "Shivam1"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest-slsa
          force: true
          config: .valint.yaml
          author-name: ${{ env.AUTHOR_NAME }}
          author-email: ${{ env.AUTHOR_EMAIL }}
          author-phone: ${{ env.AUTHOR_PHONE }}
          supplier-name: ${{ env.SUPPLIER_NAME }}
          supplier-url: ${{ env.SUPPLIER_URL }}
          supplier-email: ${{ env.SUPPLIER_EMAIL }}
          supplier-phone: ${{ env.SUPPLIER_PHONE }}

  # Step 3a: Verify SLSA Level 1 Compliance
  verify-slsa-l1:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build the Docker image
        run: docker build . -t ${{ env.IMAGE_NAME }}

      - name: Verify SLSA Level 1 Compliance
        uses: scribe-security/action-verify@master
        with:
          target: 'docker:${{ env.IMAGE_NAME }}'
          scribe-enable: true
          product-key: "Shivam1"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest
          config: .valint.yaml
          rule: slsa/l1-provenance-exists@v1  # Ensure provenance exists for Level 1 compliance
          verbose: 2

  # Step 3b: Verify SLSA Level 2 Compliance
  verify-slsa-l2:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build the Docker image
        run: docker build . -t ${{ env.IMAGE_NAME }}

      - name: Verify SLSA Level 2 Compliance
        uses: scribe-security/action-verify@master
        with:
          target: 'docker:${{ env.IMAGE_NAME }}'
          scribe-enable: true
          product-key: "Shivam1"
          product-version: ${{ env.PRODUCT_VERSION }}
          scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
          format: attest
          config: .valint.yaml
          rule: slsa/l2-provenance-authenticated@v1  # Ensure authentication of provenance for Level 2 compliance
          verbose: 2
